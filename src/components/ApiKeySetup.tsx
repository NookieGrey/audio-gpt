import React, {useState} from 'react'

interface ApiKeySetupProps {
    onApiKeySet: (apiKey: string) => void
}

const ApiKeySetup: React.FC<ApiKeySetupProps> = ({onApiKeySet}) => {
    const [apiKey, setApiKey] = useState('')
    const [isLoading, setIsLoading] = useState(false)
    const [error, setError] = useState('')

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault()

        if (!apiKey.trim()) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á')
            return
        }

        if (!apiKey.startsWith('sk-')) {
            setError('API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "sk-"')
            return
        }

        setIsLoading(true)
        setError('')

        try {
            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∫–ª—é—á–∞
            const response = await fetch('https://api.openai.com/v1/models', {
                headers: {
                    'Authorization': `Bearer ${apiKey}`,
                    'Content-Type': 'application/json'
                }
            })

            if (!response.ok) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á')
            }

            onApiKeySet(apiKey)
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞:', error)
            setError('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.')
        } finally {
            setIsLoading(false)
        }
    }

    return (
        <div className="api-key-setup">
            <h2>üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI API</h2>
            <p>
                –î–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º –≤–∞—à –ª–∏—á–Ω—ã–π API –∫–ª—é—á –æ—Ç OpenAI.
                –ö–ª—é—á –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —Å–µ–∞–Ω—Å–µ –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
            </p>

            <div className="api-info">
                <h4>üìù –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á:</h4>
                <ol>
                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="https://platform.openai.com" target="_blank"
                                        rel="noopener noreferrer">platform.openai.com</a></li>
                    <li>–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</li>
                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys"</li>
                    <li>–ù–∞–∂–º–∏—Ç–µ "Create new secret key"</li>
                    <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–ª—é—á</li>
                </ol>
            </div>

            <form onSubmit={handleSubmit} className="api-key-form">
                <div className="form-group">
                    <label htmlFor="apiKey">OpenAI API Key:</label>
                    <input
                        id="apiKey"
                        type="password"
                        value={apiKey}
                        onChange={(e) => setApiKey(e.target.value)}
                        placeholder="sk-..."
                        disabled={isLoading}
                    />
                </div>

                {error && (
                    <div className="error">
                        ‚ö†Ô∏è {error}
                    </div>
                )}

                <button
                    type="submit"
                    className="btn"
                    disabled={isLoading || !apiKey.trim()}
                >
                    {isLoading ? 'üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á...' : '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}
                </button>
            </form>
        </div>
    )
}

export default ApiKeySetup